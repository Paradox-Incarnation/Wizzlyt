---
description:
globs:
alwaysApply: false
---
# Browser Extension Patterns

## WXT Framework Usage

### Configuration
- **File**: [wxt.config.ts](mdc:wxt.config.ts)
- **Framework**: WXT for browser extension development
- **Build System**: Vite with React plugin
- **Module System**: ES modules with TypeScript support

### Content Script Architecture
- **Entry Point**: [content/index.tsx](mdc:entrypoints/content/index.tsx)
- **Pattern**: Shadow DOM UI injection for isolated styling
- **Mounting**: React root mounted in shadow DOM container
- **Isolation**: CSS and JavaScript isolated from host page

## Extension Manifest

### Permissions
- Content script injection on all URLs (`*://*/*`)
- YouTube-specific functionality
- Storage permissions for notes and settings
- Host permissions for Google AI APIs

### Content Script Injection
```typescript
export default defineContentScript({
  matches: ["*://*/*"],
  cssInjectionMode: "ui",
  main(ctx) {
    // Shadow DOM UI creation and mounting
  }
});
```

## YouTube Integration Patterns

### DOM Observation
- **Pattern**: MutationObserver for dynamic content detection
- **Target**: YouTube transcript elements and video controls
- **Lifecycle**: Start/stop observation based on page navigation

### Video Element Access
- **Method**: Direct DOM querying for video elements
- **Fallback**: Graceful handling when elements are not available
- **Timing**: Polling and event-based detection

### Transcript Extraction
- **Selectors**: YouTube-specific CSS selectors for transcript segments
- **Data Processing**: Text and timestamp extraction
- **Error Handling**: Fallback when transcript is not available

## UI Integration Patterns

### Shadow DOM Usage
- **Purpose**: Style isolation from host page
- **Implementation**: `createShadowRootUi` from WXT
- **Benefits**: Prevents CSS conflicts with YouTube

### Positioning System
- **Default**: Fixed positioning on the right side
- **Draggable**: User can move the window when unpinned
- **Responsive**: Adapts to different screen sizes
- **Z-index**: High z-index to appear above YouTube content

### Theme Integration
- **System**: Independent theme system
- **Storage**: Theme preference persisted in extension storage
- **CSS Variables**: Dynamic theme switching via CSS custom properties

## Development Patterns

### Hot Reload
- **Command**: `pnpm dev` for development with hot reload
- **Browser Support**: Chrome and Firefox development modes
- **File Watching**: Automatic rebuild on file changes

### Build Process
- **Production**: `pnpm build` for optimized builds
- **Packaging**: `pnpm zip` for extension distribution
- **Multi-browser**: Separate builds for Chrome and Firefox

### Extension APIs
- **Storage**: Browser extension storage for persistent data
- **Runtime**: Message passing between content script and background
- **Permissions**: Declarative permissions in manifest

## Security Considerations

### Content Security Policy
- Inline scripts avoided in favor of external files
- Proper CSP headers for extension resources
- Safe DOM manipulation practices

### API Key Management
- Secure storage using browser extension APIs
- No hardcoded credentials in source code
- User-provided API keys through settings interface

### Cross-Origin Requests
- Proper CORS handling for Google AI APIs
- Host permissions declared in manifest
- Error handling for network failures

## Testing Strategies

### Extension Testing
- Load unpacked extension for development testing
- Test in both Chrome and Firefox environments
- Validate manifest permissions and functionality

### Content Script Testing
- Test injection on various YouTube pages
- Validate DOM manipulation and event handling
- Test shadow DOM isolation and styling
